import {get, alpha} from '../../../src/utils'

// Variables to be moved to github/github

export default {
  calendarGraph: {
    dayBg: get('scale.gray.8'),
    dayBorder: 'rgba(27, 31, 35, 0.06)',
    day1Bg: '#0E4429',
    day2Bg: '#006D32',
    day3Bg: '#26A641',
    day4Bg: '#39D353',
    day4Border: 'rgba(255, 255, 255, 0.05)',
    day3Border: 'rgba(255, 255, 255, 0.05)',
    day2Border: 'rgba(255, 255, 255, 0.05)',
    day1Border: 'rgba(255, 255, 255, 0.05)'
  },
  marketingIcon: {
    primary: get('scale.blue.2'),
    secondary: get('scale.blue.5')
  },
  diffBlob: {
    selectedLineHighlightMixBlendMode: 'multiply'
  },
  globalNav: {
    logo: get('scale.gray.0'),
    bg: get('scale.gray.8'),
    text: get('scale.gray.1'),
    icon: get('scale.gray.1'),
    inputBg: get('scale.gray.9'),
    inputBorder: get('scale.gray.7'),
    inputIcon: get('scale.gray.7'),
    inputPlaceholder: get('scale.gray.5')
  },
  prettylights: {
    syntax: {
      comment: get('scale.gray.3'),
      constant: get('scale.blue.2'),
      entity: get('scale.purple.2'),
      storageModifierImport: get('scale.gray.1'),
      entityTag: get('scale.green.1'),
      keyword: get('scale.red.3'),
      string: get('scale.blue.1'),
      variable: get('scale.orange.2'),
      brackethighlighterUnmatched: get('scale.red.4'),
      invalidIllegalText: get('scale.gray.0'),
      invalidIllegalBg: get('scale.red.7'),
      carriageReturnText: get('scale.gray.0'),
      carriageReturnBg: get('scale.red.6'),
      stringRegexp: get('scale.green.1'),
      markupList: get('scale.yellow.1'),
      markupHeading: get('scale.blue.5'),
      markupItalic: get('scale.gray.1'),
      markupBold: get('scale.gray.1'),
      markupDeletedText: get('scale.red.0'),
      markupDeletedBg: get('scale.red.8'),
      markupInsertedText: get('scale.green.0'),
      markupInsertedBg: get('scale.green.8'),
      markupChangedText: get('scale.orange.0'),
      markupChangedBg: get('scale.orange.8'),
      markupIgnoredText: get('scale.gray.1'),
      markupIgnoredBg: get('scale.blue.6'),
      metaDiffRange: get('scale.purple.2'),
      brackethighlighterAngle: get('scale.gray.3'),
      sublimelinterGutterMark: get('scale.gray.5'),
      constantOtherReferenceLink: get('scale.blue.1')
    }
  },
  codemirror: {
    text: get('fg.default'),
    bg: get('canvas.default'),
    guttersBg: get('canvas.default'),
    guttermarkerText: get('canvas.default'),
    guttermarkerSubtleText: get('fg.inactive'),
    linenumberText: get('fg.muted'),
    cursor: get('fg.default'),
    selectionBg: get('accent.subtle'),
    activelineBg: get('neutral.subtle'),
    matchingbracketText: get('fg.default'),
    linesBg: get('canvas.default'),
    syntax: {
      comment: get('scale.gray.3'),
      constant: get('scale.blue.2'),
      entity: get('scale.purple.2'),
      keyword: get('scale.red.3'),
      storage: get('scale.red.3'),
      string: get('scale.blue.1'),
      support: get('scale.blue.2'),
      variable: get('scale.orange.2')
    }
  },
  checks: {
    bg: get('canvas.inset'),
    runBorderWidth: '1px',
    containerBorderWidth: '1px',
    textPrimary: get('fg.default'),
    textSecondary: get('fg.muted'),
    textLink: get('accent.fg'),
    btnIcon: get('fg.muted'),
    btnHoverIcon: get('fg.default'),
    btnHoverBg: get('neutral.subtle'),
    inputText: get('fg.muted'),
    inputPlaceholderText: get('fg.inactive'),
    inputFocusText: get('fg.default'),
    inputBg: get('canvas.default'),
    inputShadow: (theme: any) => `0 0 0 1px ${get('border.default')(theme)}`,
    dropdownText: get('fg.default'),
    dropdownBg: get('canvas.overlay'),
    dropdownBorder: get('border.default'),
    dropdownHoverText: get('fg.default'),
    dropdownHoverBg: get('neutral.subtle'),
    dropdownBtnHoverText: get('fg.default'),
    dropdownBtnHoverBg: get('neutral.subtle'),
    scrollbarThumbBg: get('neutral.muted'),
    headerLabelText: get('fg.muted'),
    headerLabelOpenText: get('fg.default'),
    headerBorder: get('border.divider'),
    headerIcon: get('fg.muted'),
    lineText: get('fg.muted'),
    lineNumText: get('fg.inactive'),
    lineTimestampText: get('fg.inactive'),
    lineHoverBg: get('neutral.subtle'),
    lineSelectedBg: get('accent.subtle'),
    lineSelectedNumText: get('accent.fg'),
    lineDtFmText: get('fg.onEmphasis'),
    lineDtFmBg: get('warning.emphasis'),
    gateBg: get('warning.subtle'),
    gateText: get('fg.muted'),
    gateWaitingText: get('warning.fg'),
    stepHeaderOpenBg: get('neutral.subtle'),
    stepErrorText: get('danger.fg'),
    stepWarningText: get('warning.fg'),
    loglineText: get('fg.muted'),
    loglineNumText: get('fg.inactive'),
    loglineDebugText: get('done.fg'),
    loglineErrorText: get('fg.muted'),
    loglineErrorNumText: get('fg.inactive'),
    loglineErrorBg: get('danger.subtle'),
    loglineWarningText: get('fg.muted'),
    loglineWarningNumText: get('warning.fg'),
    loglineWarningBg: get('warning.subtle'),
    loglineCommandText: get('accent.fg'),
    loglineSectionText: get('success.fg'),
    ansi: {
      black: get('scale.gray.9'),
      blackBright: get('scale.gray.8'),
      white: get('scale.gray.2'),
      whiteBright: get('scale.gray.2'),
      gray: get('scale.gray.4'),
      red: get('scale.red.3'),
      redBright: get('scale.red.2'),
      green: get('scale.green.3'),
      greenBright: get('scale.green.2'),
      yellow: get('scale.yellow.3'),
      yellowBright: get('scale.yellow.2'),
      blue: get('scale.blue.3'),
      blueBright: get('scale.blue.2'),
      magenta: get('scale.purple.3'),
      magentaBright: get('scale.purple.2'),
      cyan: '#76e3ea',
      cyanBright: '#b3f0ff'
    }
  },
  project: {
    headerBg: get('scale.gray.9'),
    sidebarBg: get('scale.gray.8'),
    gradientIn: get('scale.gray.8'),
    gradientOut: alpha(get('scale.gray.8'), 0)
  },
  headerSearch: {
    bg: get('scale.gray.9'),
    border: get('scale.gray.7')
  }
}
